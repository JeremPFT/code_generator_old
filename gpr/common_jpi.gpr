abstract project Common_Jpi is

  Project_Dir := "/home/jeremy/workspace/ada/code_generator";

  -- Project_Dir :=  external ("project_root") & "/" &
  --   external ("project_name");

  Obj_Directory := Project_Dir & "/obj";

  Lib_Directory := Project_Dir & "/lib";

  Doc_Directory := Project_Dir & "/doc";

  Exe_Directory := Project_Dir & "/bin";

  type Build_Type is ("Debug", "Release");
  Build : Build_Type := external ("BUILD", "Debug");

  package Compiler is
    -- Common_Options := ("-gnaty3abcdefhiklmnOprsStu","-gnat2012");
    -- -gnatl bugs ... don't recognize some declare layouts

    Activate_All_Warnings := "-gnatwa";
    Debugging_Info := "-g";
    Enable_Assertions := "-gnata";
    GNAT_2012_Mode := "-gnat2012";
    Optim_Lvl_0 := "-O0";
    Optim_Lvl_2 := "-O2";
    Style_Opt := "-gnaty2abcdefhikmnOprsStu"; --  TODO : detail
    Utf_8_In_Source := "-gnatW8";
    Warnings_As_Errors := "-gnatwe";
    Verbose := "-gnatv";

    Common_Options := ();
    Common_Options := Common_Options & GNAT_2012_Mode;
    Common_Options := Common_Options & Utf_8_In_Source;
    Common_Options := Common_Options & Warnings_As_Errors;
    Common_Options := Common_Options & Style_Opt;

    Debug_Options := ();
    Debug_Options := Debug_Options & Debugging_Info;
    Debug_Options := Debug_Options & Enable_Assertions;

    -- Debug_Options := Debug_Options & "-gnatq";  -- don't quit if syntax error

    Debug_Options := Debug_Options & "-gnatQ";  -- force ALI file even if error. Implies -gnatq
    Debug_Options := Debug_Options & Optim_Lvl_0;
    Debug_Options := Debug_Options & "-gnatf";
    Debug_Options := Debug_Options & "-gnateE"; -- extra information in exception messages


    Debug_Options := Debug_Options & Activate_All_Warnings; -- turn on all info/warnings
    -- Debug_Options := Debug_Options & "-gnatwa"; -- turn on all info/warnings

    -- Debug_Options := Debug_Options & "-gnatwm"; -- variables that could be constants
    -- Debug_Options := Debug_Options & "-gnatwk"; -- modified but unreferenced variables
    -- both are included by previous option -gnatwa

    Release_Options := ();
    Release_Options := Release_Options & Optim_Lvl_2;

    case Build is
      when "Debug" =>
        for Default_Switches ("Ada") use Common_Options & Debug_Options;

      when "Release" =>
        for Default_Switches ("Ada") use Common_Options & Release_Options;
    end case;
  end Compiler;

  package Binder is
    Common_Option := ();
    Common_Option := Common_Option & "-E";
    for Default_Switches ("Ada") use Common_Option;
  end Binder;

end Common_Jpi;
