<HEAD><TITLE>model-class_def.ads</TITLE></HEAD>
<BODY>
<HR><DIV ALIGN="center"><H1> File : model-class_def.ads </H1></DIV><HR>
<PRE>
<b>with</b> Ada.Containers.Vectors;

<b>with</b> Model.Interface_Def;
<b>with</b> Model.Subprogram;
<b>with</b> Model.Package_Def;

<b>package</b> Model.Class_Def <b>is</b>

  <b>type</b> Object_T <b>is</b> <b>new</b> Interface_Def.Object_T <b>with</b> <b>private</b>;

  <b>type</b> Reference_T <b>is</b> <b>access</b> <b>all</b> Object_T;

  <b>type</b> Class_T <b>is</b> <b>access</b> <b>all</b> Object_T'Class;

  <b>package</b> Vectors <b>is</b> <b>new</b> Ada.Containers.Vectors
    (Element_Type =&gt; Class_T,
     Index_Type   =&gt; Positive);

  <b>subtype</b> Vector_T <b>is</b> Vectors.Vector;

  <b>function</b> Create
    (Owner_Package : <b>access</b> Package_Def.Object_T;
     Name          : <b>in</b>     String)
    <b>return</b> <b>not</b> <b>null</b> <b>access</b> Object_T'Class;

  <b>not</b> overriding
  <b>function</b> Has_Protected_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Boolean;

  <b>not</b> overriding
  <b>function</b> Number_Of_Protected_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Natural;

  <b>not</b> overriding
  <b>function</b> Get_Protected_Subprogram
    (Self  : <b>in</b> Object_T;
     Index : <b>in</b> Positive)
    <b>return</b> <b>not</b> <b>null</b> <b>access</b> Subprogram.Object_T'Class;

  <b>not</b> overriding
  <b>procedure</b> Add_Protected_Subprogram
    (Self   : <b>in</b> <b>out</b> Object_T;
     Object : <b>access</b> Subprogram.Object_T);

  <b>not</b> overriding
  <b>function</b> Has_Private_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Boolean;

  <b>not</b> overriding
  <b>function</b> Number_Of_Private_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Natural;

  <b>not</b> overriding
  <b>function</b> Get_Private_Subprogram
    (Self  : <b>in</b> Object_T;
     Index : <b>in</b> Positive)
    <b>return</b> <b>not</b> <b>null</b> <b>access</b> Subprogram.Object_T'Class;

  <b>not</b> overriding
  <b>procedure</b> Add_Private_Subprogram
    (Self   : <b>in</b> <b>out</b> Object_T;
     Object : <b>access</b> Subprogram.Object_T);

  overriding
  <b>function</b> To_String
    (Self : <b>in</b> Object_T)
    <b>return</b> String;

<b>private</b>

  <b>type</b> Object_T <b>is</b>
    <b>new</b> Interface_Def.Object_T <b>with</b>
    <b>record</b>
      Name                  : <b>access</b> String       := <b>null</b>;
      Parent_Class          : <b>access</b> Object_T     := <b>null</b>;
      Protected_Subprograms : Subprogram.Vector_T :=
        Subprogram.Vectors.Empty_Vector;
      Private_Subprograms   : Subprogram.Vector_T :=
        Subprogram.Vectors.Empty_Vector;
    <b>end</b> <b>record</b>;

  <b>function</b> Has_Protected_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Boolean
    <b>is</b>
    (<b>not</b> Self.Protected_Subprograms.Is_Empty);

  <b>function</b> Number_Of_Protected_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Natural
    <b>is</b>
    (Natural (Self.Protected_Subprograms.Length));

  <b>function</b> Get_Protected_Subprogram
    (Self  : <b>in</b> Object_T;
     Index : <b>in</b> Positive)
    <b>return</b> <b>not</b> <b>null</b> <b>access</b> Subprogram.Object_T'Class
    <b>is</b>
    (Self.Protected_Subprograms (Index));

  <b>function</b> Has_Private_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Boolean
    <b>is</b>
    (<b>not</b> Self.Private_Subprograms.Is_Empty);

  <b>function</b> Number_Of_Private_Subprograms
    (Self : <b>in</b> Object_T)
    <b>return</b> Natural
    <b>is</b>
    (Natural (Self.Private_Subprograms.Length));

  <b>function</b> Get_Private_Subprogram
    (Self  : <b>in</b> Object_T;
     Index : <b>in</b> Positive)
    <b>return</b> <b>not</b> <b>null</b> <b>access</b> Subprogram.Object_T'Class
    <b>is</b>
    (Self.Private_Subprograms (Index));

<b>end</b> Model.Class_Def;
</PRE></BODY></HTML>
